openapi: 3.0.0
info:
  title: API сервер для проекта "Шесть городов".
  description: |-
    * Список ресурсов и маршрутов сервера "Шесть городов."
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: offers
    description: Действия с предложениями.
  - name: users
    description: Действия с пользователем.
  - name: comments
    description: Действия с комментариями.

paths:
  /offers:
    get:
      tags:
        - offers
      summary: Получение списка предложений по аренде
      description: Получает список предложений по аренде
      responses:
        "201":
          description: Получение списка предложений.
        "400":
          description: 'Список предложений недоступен: ошибка запроса.'
  /offers/{offerId}:
    post:
      tags:
        - offers
      summary: Создание нового предложения
      description: Создает новое предложение по аренде
      requestBody:
        description: Информация для создания нового предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true
      responses:
        "201":
          description: Предложение создано. Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "401":
          description: 'Предложение не может быть создано: пользователь не авторизован.'
        "400":
          description: 'Предложение не может быть создано: ошибка запроса.'
        "409":
          description: Предложение уже существует.
    patch:
      tags:
        - offers
      summary: Редактирование предложения
      description: Редактирует предложение по аренде
      responses:
        "201":
          description: Предложение успешно отредактировано.
        "400":
          description: 'Предложение не может быть отредактировано: ошибка запроса.'
    delete:
      tags:
        - offers
      summary: Удаление предложения
      description: Удаляет предложение по аренде
      responses:
        "201":
          description: Предложение успешно удалено.
        "400":
          description: 'Предложение не может быть удалено: ошибка запроса.'
    get:
      tags:
        - offers
      summary: Получение детальной информации о предложении
      description: Получает детальную информации о предложении по аренде
      responses:
        "201":
          description: Получение детальной информации о предложении.
        "400":
          description: 'Детальная информация о предложении недоступна: ошибка запроса.'
  /users/signin:
    post:
      tags:
        - users
      summary: Создание нового пользователя.
      description: Создает нового пользователя.
      requestBody:
        description: Информация для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true
      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "409":
          description: Пользователь с таким email уже существует.
  /users/login:
    post:
      tags:
        - users
      summary: Авторизация нового пользователя.
      description: Авторизует нового пользователя.
      responses:
        "201":
          description: Пользователь успешно авторизован.
        "400":
          description: 'Пользователь не может быть авторизован: ошибка запроса.'
    get:
      tags:
        - users
      summary: Проверка состояния пользователя.
      description: Возвращает информацию об состоянии авторизации пользователя.
      responses:
        "201":
          description: Получение информациии об авторизации пользователя.
        "400":
          description: 'Информации об авторизации недоступна: ошибка запроса.'
  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузка аватара пользователя.
      description: Загружает изображение (аватар) пользователя в формате 'png' или 'jpg'.
      responses:
        "201":
          description: Аватар пользователя успешно загружен.
        "400":
          description: 'Аватар не может быть загружен: ошибка запроса.'

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: keks@keks.com
        avatarURL:
          type: string
          example: https://www.domain.com/image.png
        name:
          type: string
          example: Keks
        password:
          type: string
          example: 123456
        userType:
          type: string
          enum: [pro, standard]
          example: standard
    createOffer:
      type: object
      properties:
        title:
          type: string
          example: Lorem ipsum dolor sit amet.
        description:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        offerDate:
          type: string
          format: date-time
          example: 01/01/2023T12:23:34.843Z
        city:
          type: string
          enum: [Paris, Amsterdam, Cologne, Brussels, Dusseldorf, Hamburg]
          example: Amsterdam
        previewImageURL:
          type: string
          example: https://www.domain.com/image.png
        images:
          type: array
          items:
            type: string
          example: [https://www.domain.com/image1.png, https://www.domain.com/image.jpg', https://www.domain.com/image3.png]
        isPremium:
          type: boolean
          example: true
        isFavorite:
          type: boolean
          example: false
        rating:
          type: number
          example: 3
        type:
          type: string
          enum: [apartment, house, room, hotel]
          example: house
        bedrooms:
          type: number
          example: 1
        maxAdults:
          type: number
          example: 3
        price:
          type: number
          example: 1000
        goods:
          type: array
          items:
            type: string
            enum: [Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge]
          example: [Breakfast, Air conditioning]
        hostId:
          type: string
          example: sdfsdf2343sdfsdfs
        reviews:
          type: number
          example: 12
        coordinates:
          type: array
          items:
            type: number
          example: [52.370216, 4.895168]
    user:
      type: object
      properties:
        id:
          type: string
          example: saldf23lj34ljn67
        email:
          type: string
          example: keks@keks.com
    offer:
      type: object
      properties:
        title:
          type: string
          example: Lorem ipsum dolor sit amet.
        description:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        offerDate:
          type: string
          example: 01/01/2023T12:23:34.843Z
        city:
          type: string
          enum: [Paris, Amsterdam, Cologne, Brussels, Dusseldorf, Hamburg]
          example: Amsterdam
        previewImageURL:
          type: string
          example: 'https://www.domain.com/image.png'
        images:
          type: array
          items:
            type: string
          example: [https://www.domain.com/image1.png, https://www.domain.com/image.jpg', https://www.domain.com/image3.png]
        isPremium:
          type: boolean
          example: true
        isFavorite:
          type: boolean
          example: false
        rating:
          type: number
          example: 3
        type:
          type: string
          enum: [apartment, house, room, hotel]
          example: house
        bedrooms:
          type: number
          example: 1
        maxAdults:
          type: number
          example: 3
        price:
          type: number
          example: 1000
        goods:
          type: array
          items:
            type: string
            enum: [Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge]
          example: [Breakfast, Air conditioning]
        hostId:
          type: string
          example: sdfsdf2343sdfsdfs
        reviews:
          type: number
          example: 12
        coordinates:
          type: array
          items:
            type: number
          example: [52.370216, 4.895168]





